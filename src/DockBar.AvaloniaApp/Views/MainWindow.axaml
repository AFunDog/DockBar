<Window
    x:Class="DockBar.AvaloniaApp.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:a="using:DockBar.AvaloniaApp"
    xmlns:ac="using:DockBar.AvaloniaApp.Converters"
    xmlns:controls="using:DockBar.AvaloniaApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Avalonia.Media"
    xmlns:sm="using:DockBar.SystemMonitor"
    xmlns:sys="using:System"
    xmlns:ds="using:DockBar.DockItem.Structs"
    xmlns:vm="using:DockBar.AvaloniaApp.ViewModels"
    xmlns:structs="using:DockBar.Core.Structs"
    xmlns:converters="using:DockBar.AvaloniaApp.Converters"
    Title="DockBar"
    x:DataType="vm:MainWindowViewModel"
    Classes.IsPanelShow="{Binding IsPanelShowDelay}"
    Design.Width="1000"
    Icon="avares://DockBar.AvaloniaApp/Assets/icon.ico"
    SizeToContent="WidthAndHeight"
    Topmost="True"
    mc:Ignorable="d">

    <Design.DataContext>
        <vm:MainWindowViewModel>
            <vm:MainWindowViewModel.GlobalSetting>
                <structs:AppSetting />
            </vm:MainWindowViewModel.GlobalSetting>
            <vm:MainWindowViewModel.DockItems>
                <ds:DockLinkItem LinkPath="" ShowName="停靠项目1" />
                <ds:DockLinkItem LinkPath="" ShowName="停靠项目2" />
                <ds:DockLinkItem LinkPath="" ShowName="停靠项目3" />
            </vm:MainWindowViewModel.DockItems>
        </vm:MainWindowViewModel>
    </Design.DataContext>
    <Design.DesignStyle>
        <Style Selector="Window">
            <Setter Property="Background" Value="Gray" />
            <Setter Property="RequestedThemeVariant" Value="Dark" />
            <Style Selector="^ Grid#DockPanelGrid">
                <Setter Property="ShowGridLines" Value="True" />
            </Style>
        </Style>
    </Design.DesignStyle>
    <Window.Styles>
        <Style Selector="Window">
            <Setter Property="TransparencyLevelHint" Value="AcrylicBlur,Blur,Transparent,None" />
            <Setter Property="TransparencyBackgroundFallback">
                <Setter.Value>
                    <SolidColorBrush Opacity="0.8" Color="Black" />
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SystemDecorations" Value="BorderOnly" />
            <Setter Property="ExtendClientAreaToDecorationsHint" Value="True" />
            <Setter Property="ExtendClientAreaChromeHints" Value="NoChrome" />
            <!--<Setter Property="ExtendClientAreaTitleBarHeightHint" Value="-1" />-->
            <Setter Property="CanResize" Value="False" />
            <Setter Property="ShowInTaskbar" Value="False" />
            <Setter Property="Topmost" Value="True" />
            <!--<Setter Property="Focusable" Value="True" />-->
        </Style>
        <Style Selector=":is(Control)#DockItemPanel">
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <DoubleTransition
                            Easing="SineEaseOut"
                            Property="Width"
                            Duration="0:0:0.2" />
                        <DoubleTransition
                            Easing="SineEaseOut"
                            Property="Height"
                            Duration="0:0:0.2" />
                    </Transitions>
                </Setter.Value>
            </Setter>

        </Style>
        <Style Selector=":is(Control)#FillControl">
            <Setter Property="Height" Value="0" />
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <DoubleTransition
                            Easing="ExponentialEaseOut"
                            Property="Height"
                            Duration="0:0:0.16" />
                        <ThicknessTransition
                            Easing="ExponentialEaseOut"
                            Property="Margin"
                            Duration="0:0:0.16" />
                    </Transitions>
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="Window.IsPanelShow :is(Control)#FillControl">
            <Setter Property="Height" Value="{Binding #DockPanelGrid.Bounds.Height}" />
            <Setter Property="Margin" Value="0,4,0,0" />
        </Style>

    </Window.Styles>

    <Grid Name="RootGrid" RowDefinitions="*,auto,auto">

        <ExperimentalAcrylicBorder Grid.RowSpan="3">
            <!-- 使用多重绑定生成 Material 解决 AOT 下不生效的问题 -->
            <ExperimentalAcrylicBorder.Material>
                <MultiBinding Converter="{x:Static ac:ExperimentalAcrylicBorderMaterialConverter.Instance}">
                    <Binding Path="GlobalSetting.DockPanelBackgroundColor" Converter="{x:Static converters:ColorValueColorConverter.Instance}"/>
                    <Binding Path="GlobalSetting.DockPanelBackgroundOpacity"/>
                    <Binding FallbackValue="0.4"/>
                </MultiBinding>
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>
        <!-- <Border Grid.RowSpan="3" -->
        <!--         Background="{Binding GlobalSetting.DockPanelBackgroundColor,Converter={x:Static converters:ColorValueColorConverter.Instance}}" -->
        <!--         Opacity="{Binding GlobalSetting.DockPanelBackgroundOpacity,Mode=OneWay}" /> -->

        <Control Name="FillControl" Grid.Row="0" />
        <Grid
            Name="DockPanelGrid"
            Grid.Row="1"

            VerticalAlignment="Bottom"
            ColumnDefinitions="128,*,128">
            <Grid.Styles>
                <Style Selector="Button.Flat">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button.Flat:pressed">
                    <Setter Property="RenderTransform" Value="" />
                </Style>
                <Style Selector="TextBlock.NetworkSign">
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
            </Grid.Styles>
            <Grid
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                RowDefinitions="*,*">

                <Grid
                    Grid.Row="0"
                    VerticalAlignment="Center"
                    ColumnDefinitions="auto,*"
                    RowDefinitions="*,*">
                    <Button
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Margin="0,0,4,0"
                        Classes="Flat"
                        Command="{Binding OpenTaskmgrCommand}">
                        <TextBlock
                            FontFamily="Segoe Fluent Icons"
                            FontSize="22"
                            Text="&#xE950; " />
                    </Button>
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"

                        Text="{Binding PerformanceMonitor.CpuUsage, StringFormat={}{0:F0}%}" />
                    <ProgressBar
                        Grid.Row="1"
                        Grid.Column="1"
                        MinWidth="72"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Value="{Binding PerformanceMonitor.CpuUsage}" />
                </Grid>

                <Grid
                    Grid.Row="1"
                    Margin="0,4,0,0"
                    VerticalAlignment="Center"
                    ColumnDefinitions="auto,*"
                    RowDefinitions="*,*">
                    <Button
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Margin="0,0,4,0"
                        Classes="Flat"
                        Command="{Binding OpenTaskmgrCommand}">
                        <TextBlock
                            FontFamily="Segoe Fluent Icons"
                            FontSize="22"
                            Text="&#xE9A6; " />

                    </Button>
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="{Binding PerformanceMonitor.MemoryUsage, StringFormat={}{0:F0}%}" />
                    <ProgressBar
                        Grid.Row="1"
                        Grid.Column="1"
                        MinWidth="72"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Value="{Binding PerformanceMonitor.MemoryUsage}" />
                </Grid>

            </Grid>
            <Grid
                Name="DockItemPanel"
                Grid.Column="1"
                Margin="0,0,0,2"
                MinWidth="16"
                Background="Transparent"
                DragDrop.AllowDrop="True">
                <ItemsControl
                    Name="DockItemList"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    CornerRadius="8"
                    ItemsSource="{Binding DockItems, Mode=OneWay}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="{Binding GlobalSetting.DockItemSpacing}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="ds:DockItemBase">
                            <controls:DockItemControl
                                DockItemKey="{Binding Key}"
                                ShowName="{Binding ShowName}"
                                DockIcon="{Binding IconData,Converter={x:Static ac:DockItemIconConverter.Instance}}"
                                FontSize="{Binding #DockItemList.((vm:MainWindowViewModel)DataContext).GlobalSetting.DockItemNameFontSize}"
                                Command="{Binding #DockItemList.((vm:MainWindowViewModel)DataContext).ExecuteDockItemCommand}"
                                CommandParameter="{Binding Key}"
                                PointerReleased="DockItem_PointerReleased"
                                Width="{Binding #DockItemList.((vm:MainWindowViewModel)DataContext).GlobalSetting.DockItemSize}"
                                Height="{Binding #DockItemList.((vm:MainWindowViewModel)DataContext).GlobalSetting.DockItemSize}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid>

            <Grid
                Grid.Column="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                ColumnDefinitions="0.3*,6,*"
                RowDefinitions="*,12,*,4">
                <TextBlock Classes="NetworkSign" Foreground="LightGreen">
                    <Run BaselineAlignment="Center" Text="&#xE70E;" />
                </TextBlock>
                <TextBlock
                    Grid.Row="0" Grid.Column="2"
                    VerticalAlignment="Center">
                    <Run BaselineAlignment="Center" Text="{Binding PerformanceMonitor.NetworkSentBytesString}" />
                </TextBlock>
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Classes="NetworkSign"
                    Foreground="LightCoral">
                    <Run BaselineAlignment="Center" Text="&#xE70D;" />
                </TextBlock>
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="2"
                    VerticalAlignment="Center">
                    <Run BaselineAlignment="Center" Text="{Binding PerformanceMonitor.NetworkReceivedBytesString}" />
                </TextBlock>
            </Grid>
        </Grid>
        <Border
            Name="BottomBorder"
            Grid.Row="2"
            Height="2"
            Background="Transparent"
            DragDrop.AllowDrop="True" />
    </Grid>

</Window>